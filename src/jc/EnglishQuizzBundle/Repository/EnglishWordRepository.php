<?php

namespace jc\EnglishQuizzBundle\Repository;

use jc\EnglishQuizzBundle\Repository\Common\CommonEnglishItemRepository;
use Doctrine\ORM\EntityRepository;

/**
 * EnglishWordRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnglishWordRepository extends EntityRepository implements CommonEnglishItemRepository {

    public function getItemExcludingIds($idList, $lesson = 0) {

        try {

            $condition = '';
            if ($idList)
                $condition .= ' AND i.id NOT IN (' . implode(',', $idList) . ')';
            if ($lesson > 0)
                $condition .= ' AND i.lesson = ' . $lesson;

            if (strlen($condition))
                $condition = 'WHERE ' . substr($condition, 4);

            $query = $this->_em->createQuery('SELECT i FROM jcEnglishQuizzBundle:EnglishWord i ' . $condition);
            return $query->getResult();
        }
        catch(\Exception $ex) {
            return array();
        }
    }

    public function countItem($lesson = 0) {

        try {

            $condition = '';
            if ($lesson > 0)
                $condition .= 'WHERE i.lesson = ' . $lesson;

            $query = $this->_em->createQuery('SELECT count(i) FROM jcEnglishQuizzBundle:EnglishWord i ' . $condition);

            return $query->getSingleScalarResult();
        }
        catch(\Exception $ex) {
            return 0;
        }
    }

    public function searchItem($property, $value) {

        try {

            $query = $this->_em->createQuery('SELECT i FROM jcEnglishQuizzBundle:EnglishWord i WHERE i.' . $property . ' LIKE \'%' . $value . '%\'');
            return $query->getResult();
        }
        catch(\Exception $ex) {
            return array();
        }
    }

    /**
     * Method to get lessons...
     * @return array All existing lessons list.
     */
    public function getLessonList() {

        try {

            $query = $this->_em->createQuery('SELECT distinct i.lesson FROM jcEnglishQuizzBundle:EnglishWord i WHERE i.lesson <> 0 ORDER BY i.lesson ASC');

            $tempResult = $query->getResult();
            $finalResult = array();
            foreach($tempResult as $item) {
                $finalResult[] = $item['lesson'];
            }

            return $finalResult;
        }
        catch(\Exception $ex) {
            return array();
        }
    }
}
